*&---------------------------------------------------------------------*
*& Report ZSK_P14
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT zsk_p14.

TABLES : zsk_t03,
         zsk_t04.

DATA : gt_dosya  TYPE zsk_st_14 OCCURS 0 WITH HEADER LINE,
       gs_dosya  TYPE zsk_st_14,
       gs_header TYPE zsk_t03,
       gs_item   TYPE zsk_t04,
       gt_header TYPE zsk_t03 OCCURS 0 WITH HEADER LINE,
       gt_item   TYPE zsk_t04 OCCURS 0 WITH HEADER LINE,
       gt_fcat   TYPE lvc_t_fcat,
       gs_fcat   TYPE lvc_s_fcat,
       gs_layout TYPE lvc_s_layo,
       gt_file   LIKE alsmex_tabline OCCURS 0 WITH HEADER LINE,
       gv_tcode  TYPE tcode VALUE 'ZSK_TRANSACTION',
       gv_tcode2 TYPE tcode VALUE 'ZSK_TRANSACTION2'.


SELECTION-SCREEN BEGIN OF TABBED BLOCK tab FOR 5 LINES.        ""2 adet tab alan olusturuldu.
  SELECTION-SCREEN TAB (20) tab_tab1 USER-COMMAND tab1 DEFAULT SCREEN 1001.
  SELECTION-SCREEN TAB (20) tab_tab2 USER-COMMAND tab2 DEFAULT SCREEN 1002.
SELECTION-SCREEN END OF BLOCK tab.

SELECTION-SCREEN BEGIN OF SCREEN 1001 AS SUBSCREEN.
  PARAMETERS : p_id   TYPE zsk_t03-activityid,
               p_name TYPE zsk_t04-name.
SELECTION-SCREEN END OF SCREEN 1001.

SELECTION-SCREEN BEGIN OF SCREEN 1002 AS SUBSCREEN.
  PARAMETERS: p_fname TYPE localfile.     "OBLIGATORY
SELECTION-SCREEN END OF SCREEN 1002.

INITIALIZATION.
  tab_tab1 = 'Tab1'.
  tab_tab2 = 'Tab2'.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_fname.
  PERFORM f4_fname.

*&---------------------------------------------------------------------*
*& Form PF_STATUS_SET
*&---------------------------------------------------------------------*
FORM pf_status_set USING p_extab TYPE slis_t_extab.
  SET PF-STATUS 'ZFULLSCREEN'.
ENDFORM.

FORM user_command USING r_ucomm     LIKE sy-ucomm    ""Buttons
                        rs_selfield TYPE slis_selfield.

  CASE r_ucomm.
    WHEN '&SAVE'.
      PERFORM savetable.

    WHEN '&BAKIM'.
      CALL TRANSACTION gv_tcode.

    WHEN '&BAKIM2'.
      CALL TRANSACTION gv_tcode2.
  ENDCASE.

ENDFORM.

FORM savetable.
  IF gt_file[] IS INITIAL.   ""Veriler tablodan geliyorsa uyar# veriyor.
    MESSAGE 'Tablodakki veriler gösteriliyor!' TYPE 'I'.
  ELSE.
    LOOP AT gt_dosya INTO gs_dosya.         ""gt_dosya daki verilerin gt_header ve gt_item internal table'a aktarma
      MOVE-CORRESPONDING gs_dosya TO gs_header.
      MOVE-CORRESPONDING gs_dosya TO gs_item.
      MODIFY zsk_t03 FROM gs_header.
      MODIFY zsk_t04 FROM gs_item.
      IF sy-subrc EQ 0.
        MESSAGE 'Veriler kaydedildi.' TYPE 'I'.
      ENDIF.
    ENDLOOP.
  ENDIF.
ENDFORM.

START-OF-SELECTION.
  PERFORM upload_data.
  CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
    EXPORTING
      i_structure_name       = 'ZSK_ST_14'
    CHANGING
      ct_fieldcat            = gt_fcat
    EXCEPTIONS
      inconsistent_interface = 1
      program_error          = 2
      OTHERS                 = 3.
  IF sy-subrc <> 0.
* Implement suitable error handling here
  ENDIF.

  LOOP AT gt_fcat INTO gs_fcat WHERE fieldname EQ 'ACTIVITYID'.

    gs_fcat-outputlen = 2.

    MODIFY gt_fcat FROM gs_fcat TRANSPORTING outputlen.

  ENDLOOP.

  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY_LVC'
    EXPORTING
      i_callback_program       = sy-repid
      i_callback_pf_status_set = 'PF_STATUS_SET'
      i_callback_user_command  = 'USER_COMMAND'
      is_layout_lvc            = gs_layout
      it_fieldcat_lvc          = gt_fcat
      i_default                = 'X'
      i_save                   = ' '
    TABLES
      t_outtab                 = gt_dosya
    EXCEPTIONS
      program_error            = 1
      OTHERS                   = 2.
  IF sy-subrc <> 0.
* Implement suitable error handling here
  ENDIF.

*&---------------------------------------------------------------------*
*&      Form  f4_fname
*&---------------------------------------------------------------------*
FORM f4_fname .
  DATA: file_table TYPE filetable,
        file_line  TYPE file_table,
        rc         TYPE i.

  CALL METHOD cl_gui_frontend_services=>file_open_dialog
    EXPORTING
      default_extension       = 'xlsx'
    CHANGING
      file_table              = file_table
      rc                      = rc
    EXCEPTIONS
      file_open_dialog_failed = 1
      cntl_error              = 2
      error_no_gui            = 3
      not_supported_by_gui    = 4
      OTHERS                  = 5.

  READ TABLE file_table INTO file_line INDEX 1.
  IF sy-subrc = 0.
    p_fname = file_line-filename.
  ENDIF.
ENDFORM.


*&---------------------------------------------------------------------*
*&      Form  upload_data
*&---------------------------------------------------------------------*
FORM upload_data .

  CALL FUNCTION 'ALSM_EXCEL_TO_INTERNAL_TABLE'
    EXPORTING
      filename                = p_fname
      i_begin_col             = 1
      i_begin_row             = 2
      i_end_col               = 10
      i_end_row               = 1000
    TABLES
      intern                  = gt_file
    EXCEPTIONS
      inconsistent_parameters = 1
      upload_ole              = 2
      OTHERS                  = 3.

  IF sy-subrc NE 0 OR gt_file[] IS INITIAL.
    REFRESH gt_dosya.
    IF p_id IS NOT INITIAL OR p_name IS NOT INITIAL.  ""Girilen id de#erlere göre filteleme yapar.
      SELECT * FROM zsk_t03 LEFT JOIN zsk_t04    ""Tablolardaki veriyi internal table a aktarma.
      ON zsk_t03~activityid EQ zsk_t04~activityid
      INTO CORRESPONDING FIELDS OF TABLE @gt_dosya
      WHERE zsk_t03~activityid EQ @p_id OR zsk_t04~name EQ @p_name.
    ELSE.
      SELECT * FROM zsk_t03 LEFT JOIN zsk_t04       ""Tablonun tamam#n# getirir.
      ON zsk_t03~activityid EQ zsk_t04~activityid
      INTO CORRESPONDING FIELDS OF TABLE gt_dosya.
    ENDIF.
    IF gt_dosya[] IS INITIAL.
      MESSAGE 'Tabloda herhangi bir veri bulunamad#!' TYPE 'I'.
    ENDIF.
  ELSE.
    REFRESH gt_dosya.
    LOOP AT gt_file.
      CASE gt_file-col.
        WHEN '0001'.
          MOVE gt_file-value TO gt_dosya-activityid.
        WHEN '0002'.
          MOVE gt_file-value TO gt_dosya-title.
        WHEN '0003'.
          MOVE gt_file-value TO gt_dosya-subtitle.
        WHEN '0004'.
          MOVE gt_file-value TO gt_dosya-address.
        WHEN '0005'.
          MOVE gt_file-value TO gt_dosya-skdate.
        WHEN '0006'.
          MOVE gt_file-value TO gt_dosya-name.
        WHEN '0007'.
          MOVE gt_file-value TO gt_dosya-phone.
        WHEN '0008'.
          MOVE gt_file-value TO gt_dosya-mail.
        WHEN '0009'.
          MOVE gt_file-value TO gt_dosya-ticketinfo.
      ENDCASE.

      AT END OF row.
        APPEND gt_dosya.
        CLEAR gt_dosya.
      ENDAT.
    ENDLOOP.
    IF gt_dosya[] IS INITIAL.
      MESSAGE 'Dosyada Data Bulunamad#!' TYPE 'I'.
    ENDIF.
  ENDIF.
ENDFORM.                               "upload_data
